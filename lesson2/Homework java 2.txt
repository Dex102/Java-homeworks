package Lesson_2;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        //Zad_1
        System.out.println("Задание 1");
        invertArray();
        //Zad_2
        System.out.println("Задание 2");
        emptyArray();
        //Zad_3
        System.out.println("Задание 3");
        lessSix();
        //Zad_4
        System.out.println("Задание 4");
        squareArray();
        //Zad_5
        System.out.println("Задание 5");
        maxElement();
        //Zad_6
        System.out.println("Задание 6");
        System.out.println(checkSum());
    }

    //    1. Задать целочисленный массив, состоящий из элементов 0 и 1. Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ].
//    С помощью цикла и условия заменить 0 на 1, 1 на 0;
    public static void invertArray() {
        int mass[] = {1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1};
        System.out.println("Исходный массив - " + Arrays.toString(mass));
        for (int i = 0; i < mass.length; i++) {
            if (mass[i] == 0) {
                mass[i] = 1;
            } else if (mass[i] == 1) {
                mass[i] = 0;
            }
        }
        System.out.println("Новый массив - " + Arrays.toString(mass));
    }

    //      2. Задать пустой целочисленный массив размером 8. С помощью цикла заполнить его значениями 0 3 6 9 12 15 18 21
    public static void emptyArray() {
        int mass[] = new int[8];
        for (int i = 0; i < mass.length; i++) {
            mass[0] = 0;
            mass[1] = 3;
            mass[2] = 6;
            mass[3] = 9;
            mass[4] = 12;
            mass[5] = 15;
            mass[6] = 18;
            mass[7] = 21;
        }
        System.out.println("Массив - " + Arrays.toString(mass));
    }

    //    Задать массив [ 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 ] пройти по нему циклом, и числа меньшие 6 умножить на 2
    public static void lessSix() {
        int mass[] = {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};
        System.out.println("Исходный массив - " + Arrays.toString(mass));
        for (int i = 0; i < mass.length; i++) {
            if (mass[i] < 6) {
                mass[i] = mass[i] * 2;
            }
        }
        System.out.println("Массив - " + Arrays.toString(mass));
    }

    //    Создать квадратный двумерный целочисленный массив (количество строк и столбцов одинаковое),
//    и с помощью цикла(-ов) заполнить его диагональные элементы единицами
    public static void squareArray() {
        int mass[][] = new int[7][7];
        for (int i = 0; i < mass.length; i++) {
            for (int j = 0; j < mass.length; j++) {
                if (i == j || i + j == mass.length - 1) {
                    System.out.print(mass[i][j] = 1);
                } else System.out.print(mass[i][j] = 0);
            }
            System.out.println();
        }
    }
//** Задать одномерный массив и найти в нем минимальный и максимальный элементы (без помощи интернета)
    public static void maxElement() {
        int mass[] = {5, 8, 4, 48, 10, 6, 15, 11};
        System.out.println("Исходный массив - " + Arrays.toString(mass));
        int max = mass[0];
        int min = mass[0];
        for (int i = 0; i < mass.length; i++) {
                if (mass[i] > max) {
                    max = mass[i];
                } else if (mass[i] < min) {
                    min = mass[i];
                }
        }
        System.out.println("Максимальный элемент - " + max);
        System.out.println("Минимальный элемент - " + min);
    }
//** Написать метод, в который передается не пустой одномерный целочисленный массив.
// Метод должен вернуть true, если в массиве есть место, в котором сумма левой и правой части массива равны.

    public static boolean checkSum() {
        int mass[] = {2,2,2,1,2,5,5,4,15};
        int s1 = 0;
        int s2 = 0;
        for (int i = 0; i < mass.length - 2; i++) {
            s1 = s1 + mass[i];
        }
        for (int i = mass.length - 2; i < mass.length; i++) {
            s2 = s2 + mass[i];
            }
        if (s1 == s2) {
            return true;
        } else return false;
    }

}